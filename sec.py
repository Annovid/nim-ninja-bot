from random import randint as r


nim_rules = "–ù–∏–º ‚Äî –∏–≥—Ä–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –¥–≤–∞ –∏–≥—Ä–æ–∫–∞ –ø–æ –æ—á–µ—Ä–µ–¥–∏ –±–µ—Ä—É—Ç –ø—Ä–µ–¥–º–µ—Ç—ã, —Ä–∞–∑–ª–æ–∂–µ–Ω–Ω—ã–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—á–µ–∫. " \
            "–ó–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–∑—è—Ç–æ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (–±–æ–ª—å—à–µ–µ –Ω—É–ª—è) –∏–∑ –æ–¥–Ω–æ–π –∫—É—á–∫–∏. " \
            "–í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –∏–≥—Ä–æ–∫, –≤–∑—è–≤—à–∏–π –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç." \
            "\n–ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç—Å—è, —á—Ç–æ –ø—Ä–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–≥—Ä–µ –ø–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ —Ö–æ–¥–∏—Ç –∏ –ø–æ–±–µ–∂–¥–∞–µ—Ç. " \
            "\n–ß—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ö–æ–¥, –≤–∞–º –Ω—É–∂–Ω–æ –≤–ø–∏—Å–∞—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: –Ω–æ–º–µ—Ä –∫—É—á–∫–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, " \
            "–∫–æ—Ç–æ—Ä–æ–µ –≤—ã –±–µ—Ä—ë—Ç–µ."

about_me = "–Ø - –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π, —á—Ç–æ–±—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏–≥—Ä–∞–º–∏."

nim_solution = "–†–µ—à–µ–Ω–∏–µ –Ω–∏–º–∞ –Ω–µ –ø–æ–º–µ—Å—Ç–∏—Ç—Å—è –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å—Ç—Ä–æ—á–∫–∞—Ö, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∑–¥–µ—Å—å: " \
                "\nhttps://e-maxx.ru/algo/sprague_grundy"


def nim_do_move(pos):
    re = 0
    for i in pos:
        re ^= i
    if re == 0:
        row = r(0, len(pos) - 1)
        while pos[row] == 0:
            row = r(0, len(pos) - 1)
        num = r(1, pos[row])
        pos[row] -= num
        return [row + 1, num], pos
    for row in range(len(pos)):
        for num in range(1, pos[row] + 1):
            pos[row] -= num
            re = 0
            for q in pos:
                re ^= q
            if re == 0:
                return [row + 1, num], pos
            pos[row] += num


def print_nim(pos):
    text = ""
    for row in range(len(pos)):
        text += str(row + 1) + ") " + "üìé" * pos[row] + "\n"
    return text


def user_move(move, pos):
    try:
        move = [int(i) for i in move.split()]
    except:
        return "–•–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω."
    if len(move) != 2:
        return "–•–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω."
    move[0] -= 1
    if move[0] * (len(pos) - move[0] - 1) < 0:
        return "–•–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω."
    if pos[move[0]] < move[1] or move[1] < 1:
        return "–•–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω."
    pos[move[0]] -= move[1]
    return pos


if __name__ == "__main__":
    print(nim_do_move([2, 0, 0, 2]))
